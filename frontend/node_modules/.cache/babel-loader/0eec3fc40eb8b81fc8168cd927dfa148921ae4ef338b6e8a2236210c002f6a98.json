{"ast":null,"code":"// src/components/ResultPage.js\nimport React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ResultPage(_ref){let{result,onNext,onEnd}=_ref;const{is_same_meaning,correct_answer}=result;return/*#__PURE__*/_jsxs(\"div\",{className:\"container result-page\",children:[is_same_meaning?/*#__PURE__*/_jsx(\"h2\",{children:\"Correct!\"}):/*#__PURE__*/_jsx(\"h2\",{children:\"Incorrect.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Correct Answer: \",correct_answer]}),/*#__PURE__*/_jsx(\"button\",{onClick:onNext,children:\"Next Question\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onEnd,children:\"End Quiz\"})]});}export default ResultPage;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","ResultPage","_ref","result","onNext","onEnd","is_same_meaning","correct_answer","className","children","onClick"],"sources":["/home/lee/Korean_Slang_quiz/frontend/src/components/ResultPage.js"],"sourcesContent":["// src/components/ResultPage.js\nimport React from 'react';\n\nfunction ResultPage({ result, onNext, onEnd }) {\n  const { is_same_meaning, correct_answer } = result;\n\n  return (\n    <div className=\"container result-page\">\n      {is_same_meaning ? <h2>Correct!</h2> : <h2>Incorrect.</h2>}\n      <p>Correct Answer: {correct_answer}</p>\n      <button onClick={onNext}>Next Question</button>\n      <button onClick={onEnd}>End Quiz</button>\n    </div>\n  );\n}\n\nexport default ResultPage;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAA4B,IAA3B,CAAEC,MAAM,CAAEC,MAAM,CAAEC,KAAM,CAAC,CAAAH,IAAA,CAC3C,KAAM,CAAEI,eAAe,CAAEC,cAAe,CAAC,CAAGJ,MAAM,CAElD,mBACEH,KAAA,QAAKQ,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EACnCH,eAAe,cAAGR,IAAA,OAAAW,QAAA,CAAI,UAAQ,CAAI,CAAC,cAAGX,IAAA,OAAAW,QAAA,CAAI,YAAU,CAAI,CAAC,cAC1DT,KAAA,MAAAS,QAAA,EAAG,kBAAgB,CAACF,cAAc,EAAI,CAAC,cACvCT,IAAA,WAAQY,OAAO,CAAEN,MAAO,CAAAK,QAAA,CAAC,eAAa,CAAQ,CAAC,cAC/CX,IAAA,WAAQY,OAAO,CAAEL,KAAM,CAAAI,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACtC,CAAC,CAEV,CAEA,cAAe,CAAAR,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}